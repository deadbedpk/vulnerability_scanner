import requests
import sqlinjection


def is_vulnerable(response):
    """A simple boolean function that determines whether a page
    is SQL Injection vulnerable from its `response`"""
    errors = {
        # MySQL
        "You have an error in your SQL syntax; check the manual"
        " that corresponds to your MySQL server version for the right syntax to use near ",
        "warning: mysql",
        # SQL Server
        "unclosed quotation mark after the character string",
        # Oracle
        "quoted string not properly terminated",
        "You have an error in your SQL syntax; check the manual that corresponds to your MySQL",
    }
    for error in errors:
        # if you find one of these errors, return True
        if error in response.content.decode().lower():
            return True
    # no error detected
    return False

target_url = "http://192.168.101.132/dvwa/login.php"

data_dict = {
	"username": "admin",
	"password": "password",
	"Login": "submit"
}

s = requests.session()

response = s.post(target_url, data=data_dict)
response1 = s.post("http://192.168.101.132/dvwa/vulnerabilities/sqli/")

#a = sqlinjection.is_vulnerable("http://192.168.101.132/dvwa/vulnerabilities/sqli/")


print(response1.content)

